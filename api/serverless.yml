service: morninglight-api

plugins:
  - serverless-webpack

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: 
      forceExclude:
        - aws-sdk
    packager: "yarn"

package:
  individually: true

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: eu-central-1
  timeout: 20
  environment:
    REGION: ${self:provider.region}
    PHOTON_API_KEY: ${file(./secrets.json):PHOTON_API_KEY}
    CRON_NAME: ${self:service}-${self:provider.stage}-cron
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:eu-central-1:*:*"
    - Effect: "Allow"
      Action:
        - events:ListTargetsByRule
        - events:PutTargets
        - events:PutRule
        - events:PutEvents
      Resource: "*"


functions:
  executer:
    handler: src/cronRunner.handler
    events:
      - schedule:
          name: ${self:provider.environment.CRON_NAME}
          rate: cron(0 0 1 1 ? 1970)
          enabled: false
  scheduler:
    handler: src/schedule.handler
    events:
      - cloudwatchEvent:
          event:
            source:
              - "io.morninglight"
            detail-type:
              - "cron:executed"
              - "schedule:updated"
  schedules:
    handler: src/schedule.handler
    events:
      - http:
          path: schedules
          method: get
          cors: true
      - http:
          path: schedules/{id}
          method: get
          cors: true
      - http:
          path: schedules
          method: post
          cors: true
      - http:
          path: schedules/{id}
          method: put
          cors: true
      - http:
          path: schedules/{id}
          method: delete
          cors: true

resources:
  Resources:
    MorningLightScheduleTable:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: "Retain"
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
